$border-radius: 9999px;

.form {
    position: relative;

    width: 100%;

    border-radius: $border-radius;
    max-width: var(--width-500);

    min-height: var(--font-size-850);
    padding: var(--padding-10);

    transition: all 1s;

    label {
        position: absolute;
        top: 30%;
        // top: calc(var(--font-size-850) * 50% - var(--font-size-500) * 50%);
        left: var(--padding-500);
        transition: 0.3s;
        transition-delay: 0.1s;
        padding: 0 var(--padding-50);
        border-radius: var(--border-radius-600);
        background: var(--color-background-start);
        box-shadow: 10px 0px 8px 1px var(--color-background-start), -5px 0px 5px 1px var(--color-background-start);
    }

    &:hover,
    &:focus,
    &:active,
    &:focus-within {
        label {
            font-size: var(--font-size-100);
            top: calc(var(--padding-100) * -1);
            left: var(--padding-200);
        }
    }

    background: linear-gradient(to right bottom,
        hsla(0, 0%, 100%, 0.502),
        hsla(0, 0%, 100%, 0.251),
        hsla(0, 0%, 100%, 0.527),
        hsla(0, 0%, 100%, 0.541),
        hsla(0, 0%, 100%, 0.205),
        hsla(0, 0%, 100%, 0.301),
        hsla(0, 0%, 100%, 0.502));

    &:before {
        content: "";
        z-index: 1;
        position: absolute;
        top: 0;
        right: 1rem;
        bottom: 0;
        left: 1rem;
        background: linear-gradient(to right,
                rgba(112, 39, 175, 0.829) 0%,
                rgba(102, 32, 194, 0.726) 45%,
                rgba(57, 61, 172, 0.788) 75%,
                rgba(62, 74, 163, 0.733) 100%);
        transform: scale(0.5);
        filter: blur(10px);
        opacity: 0;
        transition: all 0.3s;
        border-radius: inherit;
    }

    /* 
    * Prevents issues when the parent creates a 
    * stacking context. (For example, using the transform
    * property )
    */
    &::after {
        content: "";
        z-index: -1;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: inherit;
        border-radius: inherit;
    }

    &:hover {
        background: linear-gradient(to right,
                rgba(112, 39, 175, 0.829) 0%,
                rgba(102, 32, 194, 0.726) 45%,
                rgba(57, 61, 172, 0.788) 75%,
                rgba(62, 74, 163, 0.733) 100%);

        &::before {
            opacity: 0.9;
            transform: scale(1);
        }
    }

    &:active,
    &:focus,
    &:focus-within {
        background: linear-gradient(to right,
                rgba(129, 47, 201, 0.918) 0%,
                rgba(114, 39, 212, 0.815) 45%,
                rgba(68, 73, 206, 0.856) 75%,
                rgba(78, 92, 201, 0.842) 100%);

        &::before {
            opacity: 0.9;
            transform: scale(1.1);
        }
    }

    button.submit {
        font-weight: var(--font-bold);
        margin: 3px 3px 3px 0;
        min-width: 2.5rem;
        padding-left: 0;
        padding-right: 0;
        border-radius: none;
        box-shadow: -2px -2px 15px 3px hsla(308, 27%, 35%, 0.596),
            2px 2px 15px 3px hsla(232, 69%, 37%, 0.623);

        svg {
            margin-left: 0;
            width: 2.5rem;
        }

        &::after {
            left: -200%;
        }

        &:hover {
            transform: none;
            box-shadow: -2px -2px 15px 3px hsla(308, 27%, 35%, 0.747),
                2px 2px 15px 3px hsla(232, 69%, 37%, 0.747);

            &::after {
                left: 200%;
            }
        }
    }

}



.container {
    background: var(--color-background-start);
    position: relative;
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
    height: 100%;
    min-height: 100%;
    z-index: 2;

    border-radius: $border-radius;
}

.parts {
    opacity: 1;
    max-width: 100%;
    overflow: hidden;
    white-space: nowrap;
    display: inline-block;
}

.partsEnter {
    opacity: 0;
    max-width: 0%;
}

.partsExit {
    max-width: 100%;
}

.partsEnterActive {
    opacity: 1;
    max-width: 100%;
}

.partsExitActive {
    max-width: 0%;
}

.partsEnterActive,
.partsExitActive,
.parts {
    transition: max-width 0.1s, opacity 0.1s;
}

.partsFocused {
    transition-delay: 0.1s
}