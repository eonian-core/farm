{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x37F07b60d5e7Fc5E4B2342d9A7968c9d1b8D1676",
      "kind": "uups"
    },
    {
      "address": "0x37F07b60d5e7Fc5E4B2342d9A7968c9d1b8D1676",
      "kind": "uups"
    },
    {
      "address": "0xaaF4F4fb77bE4C565826e5F9844E5dDc40990eb5",
      "kind": "uups"
    },
    {
      "address": "0x6bD18204621C2ed91d60EbDC33B6E425d3EaB707",
      "kind": "uups"
    },
    {
      "address": "0xE79AE74A752f34Fc37ac42b5AB9Cc38d844904e9",
      "kind": "uups"
    },
    {
      "address": "0x264E658931ab81c4B37AFDBF8ad9a877C5BEB861",
      "kind": "uups"
    },
    {
      "address": "0x6C8417C42f21567F38925F70dD3374bfFA0a1865",
      "kind": "uups"
    },
    {
      "address": "0xaf653Dcbe62B403D95680F76F552D3005712b833",
      "kind": "uups"
    },
    {
      "address": "0x95E1DaFe365ddeF1C16981FBe376Af5610f87af6",
      "kind": "uups"
    },
    {
      "address": "0xaD3a0117FDFF9b3D227dB9098b73b1C816106f6b",
      "kind": "uups"
    },
    {
      "address": "0x4D5Fc5F1125bDB0E4f33A1197AcD91c4B1F3d7eb",
      "kind": "uups"
    },
    {
      "address": "0x3a29a8964938845Daf9466e8e5E306779ad6E86f",
      "kind": "uups"
    }
  ],
  "impls": {
    "2eab54885d41ee256e498931838393dd19251a20c22a65e8878bc35cf2966dd5": {
      "address": "0xFEA351A235245eE6769a4AdEfcCC95Ce6ED0fdcF",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeInitializable",
            "src": "src/upgradeable/SafeInitializable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeUUPSUpgradeable",
            "src": "src/upgradeable/SafeUUPSUpgradeable.sol:19"
          },
          {
            "label": "shutdownLossRatio",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "LossRatioHealthCheck",
            "src": "src/healthcheck/LossRatioHealthCheck.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "LossRatioHealthCheck",
            "src": "src/healthcheck/LossRatioHealthCheck.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "allAddresses": [
        "0xFEA351A235245eE6769a4AdEfcCC95Ce6ED0fdcF",
        "0x37Ec1326DBBad22E5CF23237B7f8861F19caED38",
        "0xB33Ce75bE0606645c470FFbd480c8001f41eeDD9"
      ]
    },
    "01d9f36c864b4ffe09b9de245eae7f08f5ac469de835783c54083709d2fe69bc": {
      "address": "0xed6E4b732CDF4C206B72131f14A9aA9EC1a8b07F",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeInitializable",
            "src": "src/upgradeable/SafeInitializable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:37"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:39"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:41"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:42"
          },
          {
            "label": "_defaultOperatorsArray",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:48"
          },
          {
            "label": "_defaultOperators",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:51"
          },
          {
            "label": "_operators",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:54"
          },
          {
            "label": "_revokedDefaultOperators",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:55"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:525"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:40"
          },
          {
            "label": "debtRatio",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:43"
          },
          {
            "label": "lastReportTimestamp",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:46"
          },
          {
            "label": "borrowersData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_struct(BorrowerData)11098_storage)",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:56"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeUUPSUpgradeable",
            "src": "src/upgradeable/SafeUUPSUpgradeable.sol:19"
          },
          {
            "label": "asset",
            "offset": 0,
            "slot": "505",
            "type": "t_contract(IERC20Upgradeable)1573",
            "contract": "ERC4626Upgradeable",
            "src": "src/tokens/ERC4626Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC4626Upgradeable",
            "src": "src/tokens/ERC4626Upgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeERC4626Upgradeable",
            "src": "src/tokens/SafeERC4626Upgradeable.sol:26"
          },
          {
            "label": "withdrawalQueue",
            "offset": 0,
            "slot": "606",
            "type": "t_array(t_address)dyn_storage",
            "contract": "StrategiesLender",
            "src": "src/lending/StrategiesLender.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "607",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StrategiesLender",
            "src": "src/lending/StrategiesLender.sol:30"
          },
          {
            "label": "withdrawHooks",
            "offset": 0,
            "slot": "657",
            "type": "t_array(t_contract(IVaultHook)16886)dyn_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:10"
          },
          {
            "label": "depositHooks",
            "offset": 0,
            "slot": "658",
            "type": "t_array(t_contract(IVaultHook)16886)dyn_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "659",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:16"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "709",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/Vault.sol:41"
          },
          {
            "label": "managementFee",
            "offset": 0,
            "slot": "710",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:44"
          },
          {
            "label": "lockedProfitBaseline",
            "offset": 0,
            "slot": "711",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:48"
          },
          {
            "label": "lockedProfitReleaseRate",
            "offset": 0,
            "slot": "712",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:52"
          },
          {
            "label": "founders",
            "offset": 0,
            "slot": "713",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/Vault.sol:55"
          },
          {
            "label": "foundersFee",
            "offset": 0,
            "slot": "714",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "715",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Vault",
            "src": "src/Vault.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_contract(IVaultHook)16886)dyn_storage": {
            "label": "contract IVaultHook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1573": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultHook)16886": {
            "label": "contract IVaultHook",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowerData)11098_storage)": {
            "label": "mapping(address => struct Lender.BorrowerData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowerData)11098_storage": {
            "label": "struct Lender.BorrowerData",
            "members": [
              {
                "label": "activationTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastReportTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "debt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "allAddresses": [
        "0xed6E4b732CDF4C206B72131f14A9aA9EC1a8b07F",
        "0xC5c203f7AC6Ace51e4B57Ff308e0647C5DACb92A",
        "0x6e2cFAf7aD1D4cBC565e79863F66cEE6cf7E2508",
        "0xE62A3E8ac2477d2C74f236Ad7e2a8F97677b8481",
        "0x2aFf4e3C40e5331907DDF1B9A60Ae851Ab51866B",
        "0x9a73315C6c89A22a789A4DfD202875f18fFB54cD",
        "0x484642c161b81Fde4e5c43a8433B8E9C780176B5",
        "0x602572577C886958F05812ff2C197C3c2Be8a010"
      ]
    },
    "5498c724e2363afc687756fcd6d79b211f7acafda7a132c47f6625fc229973b6": {
      "address": "0x3133696d6F3F07D033F4AD035C5023aB00434202",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeInitializable",
            "src": "src/upgradeable/SafeInitializable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeUUPSUpgradeable",
            "src": "src/upgradeable/SafeUUPSUpgradeable.sol:19"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "551",
            "type": "t_struct(Counter)5405_storage",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:25"
          },
          {
            "label": "_burnAuth",
            "offset": 0,
            "slot": "552",
            "type": "t_enum(BurnAuth)16812",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:28"
          },
          {
            "label": "_mintOnce",
            "offset": 1,
            "slot": "552",
            "type": "t_bool",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "553",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:36"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "603",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "604",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "rewardIndex",
            "offset": 0,
            "slot": "653",
            "type": "t_uint256",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:22"
          },
          {
            "label": "rewardOwnerIndex",
            "offset": 0,
            "slot": "654",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:25"
          },
          {
            "label": "numberCoins",
            "offset": 0,
            "slot": "655",
            "type": "t_uint16",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:28"
          },
          {
            "label": "vault",
            "offset": 2,
            "slot": "655",
            "type": "t_contract(Vault)9927",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "656",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:35"
          },
          {
            "label": "maxCountTokens",
            "offset": 0,
            "slot": "706",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:24"
          },
          {
            "label": "nextTokenPriceMultiplier",
            "offset": 0,
            "slot": "707",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:27"
          },
          {
            "label": "nextTokenPrice",
            "offset": 0,
            "slot": "708",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "709",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Vault)9927": {
            "label": "contract Vault",
            "numberOfBytes": "20"
          },
          "t_enum(BurnAuth)16812": {
            "label": "enum IERC5484.BurnAuth",
            "members": [
              "IssuerOnly",
              "OwnerOnly",
              "Both",
              "Neither"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5405_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "allAddresses": [
        "0x3133696d6F3F07D033F4AD035C5023aB00434202",
        "0x6AcBC3BBB143Ab47e2A7E821C9f5adEA67318fFc",
        "0x73a5E6d30184B91E5e928D2EBD81E9a03289616a",
        "0x4145097C0FBADC48D2Ea1f27BcEca8907CB38239",
        "0x6d30fB7A37D979D48Cba7f4D859BeDf4e0B97F53",
        "0x8Ff0fcFf39Bac2a6d80D8E9A3F8235054076C4A1",
        "0xB697481fe3AdA0F35F2Ce5daF103BcB86E07CB87",
        "0x093342167436dbfB79b1C704c818eaCDb72382e4",
        "0xe03cAB61483FE9915db8CBFa786d585C3b72F439",
        "0x69471d238315c9213eA5e60459fd49104442357b",
        "0xc13225c1098F71F263F1BFD9014d15f95901b9cA",
        "0x5DF9353A8B2f7f300f6b91D326766773e5854D6c"
      ]
    },
    "33bfc1ecc0758efff6b6a625d45adeb3bf145ec477ec6f7331dc7ad3fced97c4": {
      "address": "0x6347b9e591a895D1eE3f3C40A4409366808a52Dc",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeInitializable",
            "src": "src/upgradeable/SafeInitializable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:37"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:39"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:41"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:42"
          },
          {
            "label": "_defaultOperatorsArray",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:48"
          },
          {
            "label": "_defaultOperators",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:51"
          },
          {
            "label": "_operators",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:54"
          },
          {
            "label": "_revokedDefaultOperators",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:55"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:525"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:40"
          },
          {
            "label": "debtRatio",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:43"
          },
          {
            "label": "lastReportTimestamp",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:46"
          },
          {
            "label": "borrowersData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_struct(BorrowerData)11098_storage)",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:49"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:56"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeUUPSUpgradeable",
            "src": "src/upgradeable/SafeUUPSUpgradeable.sol:19"
          },
          {
            "label": "asset",
            "offset": 0,
            "slot": "505",
            "type": "t_contract(IERC20Upgradeable)1573",
            "contract": "ERC4626Upgradeable",
            "src": "src/tokens/ERC4626Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC4626Upgradeable",
            "src": "src/tokens/ERC4626Upgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeERC4626Upgradeable",
            "src": "src/tokens/SafeERC4626Upgradeable.sol:26"
          },
          {
            "label": "withdrawalQueue",
            "offset": 0,
            "slot": "606",
            "type": "t_array(t_address)dyn_storage",
            "contract": "StrategiesLender",
            "src": "src/lending/StrategiesLender.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "607",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StrategiesLender",
            "src": "src/lending/StrategiesLender.sol:30"
          },
          {
            "label": "withdrawHooks",
            "offset": 0,
            "slot": "657",
            "type": "t_array(t_contract(IVaultHook)16935)dyn_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:10"
          },
          {
            "label": "depositHooks",
            "offset": 0,
            "slot": "658",
            "type": "t_array(t_contract(IVaultHook)16935)dyn_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "659",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:16"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "709",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/Vault.sol:41"
          },
          {
            "label": "managementFee",
            "offset": 0,
            "slot": "710",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:44"
          },
          {
            "label": "lockedProfitBaseline",
            "offset": 0,
            "slot": "711",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:48"
          },
          {
            "label": "lockedProfitReleaseRate",
            "offset": 0,
            "slot": "712",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:52"
          },
          {
            "label": "founders",
            "offset": 0,
            "slot": "713",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/Vault.sol:55"
          },
          {
            "label": "foundersFee",
            "offset": 0,
            "slot": "714",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "715",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Vault",
            "src": "src/Vault.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_contract(IVaultHook)16935)dyn_storage": {
            "label": "contract IVaultHook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1573": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultHook)16935": {
            "label": "contract IVaultHook",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowerData)11098_storage)": {
            "label": "mapping(address => struct Lender.BorrowerData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowerData)11098_storage": {
            "label": "struct Lender.BorrowerData",
            "members": [
              {
                "label": "activationTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastReportTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "debt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x6347b9e591a895D1eE3f3C40A4409366808a52Dc",
        "0xBC36bEbBd3ce5f1eD6379021f94985a9df5B3ec2",
        "0x96783E22e40dFC4C12b40AA732a4FaB825Cb2429",
        "0xfAf77A58650F34B726c7179F55EA50636deccbFA",
        "0xc6199DAB5Ee460CA592F246c93ef2bA0F92F0cF1",
        "0xD6A0aFd43fb8c9b24Ab6d4a983842305211525A8",
        "0xEa2a4A50d7129d8C4D37465F2B6E70241dc0147A",
        "0x0445b0C6b6f1F8889DDc7644f63310a1Da1E42fC",
        "0x7847f4bDcAb86b48202E090A49cfBf2234bAA71D"
      ]
    },
    "f70c34fc5116f5c5af8e45a58d25b4e42d4e0fec49e605e970df802655a96edb": {
      "address": "0xf9aA4736375f88339a413FbfFa20c027B5EebB33",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeInitializable",
            "src": "src/upgradeable/SafeInitializable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeUUPSUpgradeable",
            "src": "src/upgradeable/SafeUUPSUpgradeable.sol:19"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "551",
            "type": "t_struct(Counter)5405_storage",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:25"
          },
          {
            "label": "_burnAuth",
            "offset": 0,
            "slot": "552",
            "type": "t_enum(BurnAuth)16861",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:28"
          },
          {
            "label": "_mintOnce",
            "offset": 1,
            "slot": "552",
            "type": "t_bool",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "553",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:36"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "603",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "604",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "rewardIndex",
            "offset": 0,
            "slot": "653",
            "type": "t_uint256",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:22"
          },
          {
            "label": "rewardOwnerIndex",
            "offset": 0,
            "slot": "654",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:25"
          },
          {
            "label": "numberCoins",
            "offset": 0,
            "slot": "655",
            "type": "t_uint16",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:28"
          },
          {
            "label": "vault",
            "offset": 2,
            "slot": "655",
            "type": "t_contract(Vault)9927",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "656",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:35"
          },
          {
            "label": "maxCountTokens",
            "offset": 0,
            "slot": "706",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:24"
          },
          {
            "label": "nextTokenPriceMultiplier",
            "offset": 0,
            "slot": "707",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:27"
          },
          {
            "label": "nextTokenPrice",
            "offset": 0,
            "slot": "708",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "709",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Vault)9927": {
            "label": "contract Vault",
            "numberOfBytes": "20"
          },
          "t_enum(BurnAuth)16861": {
            "label": "enum IERC5484.BurnAuth",
            "members": [
              "IssuerOnly",
              "OwnerOnly",
              "Both",
              "Neither"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5405_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xf9aA4736375f88339a413FbfFa20c027B5EebB33",
        "0x9c6da0dFE85686f328326fBEC9eeFf82342794F4",
        "0xA7a8B0a67659270789c511Ccaf4956fcD0f50708",
        "0x53FA35e58deC57D958173c78D70Ad13ca44985bF",
        "0xd7642ca8fC096886C8CC58dDaA2F944864E0f663"
      ]
    },
    "b4a9b5fcce8ddb27d578ae2d9a89facf7b4d3b55cc1a35c916ce64c0360beb6c": {
      "address": "0x6C1F94705c46eB49a3775f6CAaa2dEcD8AB4b99C",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeInitializable",
            "src": "src/upgradeable/SafeInitializable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:37"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:39"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:41"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:42"
          },
          {
            "label": "_defaultOperatorsArray",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:48"
          },
          {
            "label": "_defaultOperators",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:51"
          },
          {
            "label": "_operators",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:54"
          },
          {
            "label": "_revokedDefaultOperators",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:55"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC777Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC777/ERC777Upgradeable.sol:525"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:41"
          },
          {
            "label": "debtRatio",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:44"
          },
          {
            "label": "lastReportTimestamp",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:47"
          },
          {
            "label": "borrowersData",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_struct(BorrowerData)11094_storage)",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Lender",
            "src": "src/lending/Lender.sol:57"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "405",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "455",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeUUPSUpgradeable",
            "src": "src/upgradeable/SafeUUPSUpgradeable.sol:19"
          },
          {
            "label": "asset",
            "offset": 0,
            "slot": "505",
            "type": "t_contract(IERC20Upgradeable)1573",
            "contract": "ERC4626Upgradeable",
            "src": "src/tokens/ERC4626Upgradeable.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC4626Upgradeable",
            "src": "src/tokens/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeERC4626Upgradeable",
            "src": "src/tokens/SafeERC4626Upgradeable.sol:26"
          },
          {
            "label": "withdrawalQueue",
            "offset": 0,
            "slot": "606",
            "type": "t_array(t_address)dyn_storage",
            "contract": "StrategiesLender",
            "src": "src/lending/StrategiesLender.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "607",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StrategiesLender",
            "src": "src/lending/StrategiesLender.sol:31"
          },
          {
            "label": "withdrawHooks",
            "offset": 0,
            "slot": "657",
            "type": "t_array(t_contract(IVaultHook)16959)dyn_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:10"
          },
          {
            "label": "depositHooks",
            "offset": 0,
            "slot": "658",
            "type": "t_array(t_contract(IVaultHook)16959)dyn_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "659",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC4626Lifecycle",
            "src": "src/tokens/ERC4626Lifecycle.sol:16"
          },
          {
            "label": "rewards",
            "offset": 0,
            "slot": "709",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/Vault.sol:37"
          },
          {
            "label": "managementFee",
            "offset": 0,
            "slot": "710",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:40"
          },
          {
            "label": "lockedProfitBaseline",
            "offset": 0,
            "slot": "711",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:44"
          },
          {
            "label": "lockedProfitReleaseRate",
            "offset": 0,
            "slot": "712",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:48"
          },
          {
            "label": "founders",
            "offset": 0,
            "slot": "713",
            "type": "t_address",
            "contract": "Vault",
            "src": "src/Vault.sol:51"
          },
          {
            "label": "foundersFee",
            "offset": 0,
            "slot": "714",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "src/Vault.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "715",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Vault",
            "src": "src/Vault.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_contract(IVaultHook)16959)dyn_storage": {
            "label": "contract IVaultHook[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1573": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultHook)16959": {
            "label": "contract IVaultHook",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(BorrowerData)11094_storage)": {
            "label": "mapping(address => struct Lender.BorrowerData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BorrowerData)11094_storage": {
            "label": "struct Lender.BorrowerData",
            "members": [
              {
                "label": "activationTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastReportTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "debt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x6C1F94705c46eB49a3775f6CAaa2dEcD8AB4b99C",
        "0x3dCcc5332f6DBAc54916F33a0Cc4596C8AD8f22B",
        "0x92CD12c130fa71Cd235ba5fe5658aA134Cc29903",
        "0x36deAbA4087dB807A6f74c808F3Dc5695B1ddb4E",
        "0x7d294896B6D07401E4FF7fc243ae585dE4b9f27d"
      ]
    },
    "60f73c604c2c374045eef1519d9642ea52c2ef79fd2538900f4a76c96da6aa02": {
      "address": "0x4C8a7949b281f4515BeE1501f5ca2E6A737d3F1D",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeInitializable",
            "src": "src/upgradeable/SafeInitializable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeUUPSUpgradeable",
            "src": "src/upgradeable/SafeUUPSUpgradeable.sol:19"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "402",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "451",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "501",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)80_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "502",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "551",
            "type": "t_struct(Counter)5405_storage",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:28"
          },
          {
            "label": "_burnAuth",
            "offset": 0,
            "slot": "552",
            "type": "t_enum(BurnAuth)16887",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:31"
          },
          {
            "label": "_mintOnce",
            "offset": 1,
            "slot": "552",
            "type": "t_bool",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "553",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC5484Upgradeable",
            "src": "src/tokens/ERC5484Upgradeable.sol:39"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "603",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "604",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "rewardIndex",
            "offset": 0,
            "slot": "653",
            "type": "t_uint256",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:25"
          },
          {
            "label": "rewardOwnerIndex",
            "offset": 0,
            "slot": "654",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:28"
          },
          {
            "label": "numberCoins",
            "offset": 0,
            "slot": "655",
            "type": "t_uint16",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:31"
          },
          {
            "label": "vault",
            "offset": 2,
            "slot": "655",
            "type": "t_contract(Vault)9918",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "656",
            "type": "t_array(t_uint256)50_storage",
            "contract": "RewardHolder",
            "src": "src/tokens/RewardHolder.sol:38"
          },
          {
            "label": "maxCountTokens",
            "offset": 0,
            "slot": "706",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:21"
          },
          {
            "label": "nextTokenPriceMultiplier",
            "offset": 0,
            "slot": "707",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:24"
          },
          {
            "label": "nextTokenPrice",
            "offset": 0,
            "slot": "708",
            "type": "t_uint256",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "709",
            "type": "t_array(t_uint256)50_storage",
            "contract": "VaultFounderToken",
            "src": "src/tokens/VaultFounderToken.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Vault)9918": {
            "label": "contract Vault",
            "numberOfBytes": "20"
          },
          "t_enum(BurnAuth)16887": {
            "label": "enum IERC5484.BurnAuth",
            "members": [
              "IssuerOnly",
              "OwnerOnly",
              "Both",
              "Neither"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)80_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5405_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)80_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x4C8a7949b281f4515BeE1501f5ca2E6A737d3F1D",
        "0xd48994Ab545d182cf7dE39b4B0232199c87E90e8",
        "0x18a2EE77f7F3aAA4690a85a30434B1e63F53c3df",
        "0x4948885B67bd8Eea9566270C214068a0Be1599bA",
        "0xF629B7c8E19A4D7887d46bDbC9641ed796fd963D"
      ]
    }
  }
}
